---
import type { ProjectFrontmatter } from '@types'
import {  frontendStacks,  backendStacks,  databases,  capitalizeSentence, slugify } from '@utils'
import ProjectsList from '@components/ProjectsList.astro'
import ProjectsListLayout from '@layouts/ProjectsListLayout.astro'

const { tag } = Astro.params

// Get all tags from projects and technologies and make a dinamic route for each one
export async function getStaticPaths() {
  const projects = await Astro.glob<ProjectFrontmatter>('../*.md')
  const technologies = [...frontendStacks, ...backendStacks, ...databases]
  const allTags = technologies.map(tag => slugify(tag))

  projects.forEach((project) => {
    project.frontmatter.tags?.forEach((tag) => {
      if (!allTags.includes(tag)) {
        allTags.push(tag)
      }
    })
  })
  return allTags.map((tag) => ({
    params: {
      tag: tag,
    },
  }))
}
// Show only projects with the tag
const projects = await Astro.glob<ProjectFrontmatter>('../*.md')
const filterProjects = projects.filter((project) => {
  let shouldShow = false
  project.frontmatter.tags?.forEach((projectTag) => {
    if (projectTag.toLocaleLowerCase() === tag) {
      shouldShow = true
    }
  })
  return shouldShow
})
---

<ProjectsListLayout title={`${capitalizeSentence(tag as string)} Projects`}>
  <p>Projects with <span class='tag'>{tag?.toLocaleUpperCase()}</span> tag:</p>
  {
    filterProjects.length === 0 ? (
      tag === 'astro' ? (
        <p class='not-found'>
          This website is completely made with Astro and Typescript. Check it
          out!
        </p>
      ) : (
        <p class='not-found'>
          I don't have any {tag?.toLocaleUpperCase()} project published on my
          page yet. You can take a look at my{' '}
          <a href='https://github.com/jesus-molano'>Github</a>.
        </p>
      )
    ) : (
      <ProjectsList projects={filterProjects} />
    )
  }
</ProjectsListLayout>

<style lang='scss'>
  .tag {
    text-align: center;
    border-radius: 8px;
    color: var(--color-background);
    text-transform: uppercase;
    font-weight: 900;
    font-size: 0.75rem;
    text-align: center;
    text-decoration: none;
    background-color: var(--color-tertiary);
    padding: 0.25rem 0.5rem;
  }

  .not-found {
    text-align: center;
    font-size: 1.25rem;
    font-weight: 900;
    background-color: var(--color-bg-soft);
    border-radius: 8px;
    display: inline-block;
    margin: 2rem auto;
    padding: 1rem 2rem;
    box-shadow: var(--color-bg-dark) 5px 5px 20px;
    a {
      color: var(--color-primary);
      text-decoration: none;
    }
  }
</style>
